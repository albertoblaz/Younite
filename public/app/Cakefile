
# Ejemplo de Cakefile recursivo con bastante buena pinta
# https://gist.github.com/tbeseda/1096141

fs = require 'fs'

{print} = require 'sys'
{spawn} = require 'child_process'

build = (callback) ->
    fs.readFile 'config', (err, data) ->
        throw err if err
        elems = data.toString()
        elems = elems.replace(/\n\n/g, "\n")
        print "Files compiled:\n\n"
        print elems, "\n"

        elems = elems.split("\n")
        options = ['-o', '_build/', '-j', 'app.js', '-cw']
        elems.forEach (e) ->
            options.push e

        coffee = spawn 'coffee', options
        coffee.stderr.on 'data', (data) ->
            process.stderr.write data.toString()
        coffee.stdout.on 'data', (data) ->
            print data.toString()
        coffee.on 'exit', (code) ->
            callback?() if code is 0


task 'build', 'Build lib/ from src/', ->
    build()
    