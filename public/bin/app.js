// Generated by CoffeeScript 1.6.3
(function() {
  var Site, SiteItemView, SitesController, disco, _ref, _ref1,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  SitesController = (function(_super) {
    __extends(SitesController, _super);

    SitesController.prototype.elements = {
      "ul#milista": "items"
    };

    SitesController.prototype.events = {
      "click a[data-action=search]": "onSearch"
    };

    function SitesController() {
      this.bindSiteError = __bind(this.bindSiteError, this);
      this.bindSiteDelete = __bind(this.bindSiteDelete, this);
      this.bindSiteCreate = __bind(this.bindSiteCreate, this);
      SitesController.__super__.constructor.apply(this, arguments);
      this.items.html("");
      Site.bind("create", this.bindSiteCreate);
      Site.bind("delete", this.bindSiteDelete);
      Site.bind("error", this.bindSiteError);
      this.routes({
        "/sites/:id": this.viewProfile
      });
      Monocle.Route.listen();
    }

    SitesController.prototype.onSearch = function(event) {
      return alert("Searching");
    };

    SitesController.prototype.bindSiteCreate = function(site) {
      var view;
      console.log("You've created " + site.name + "!");
      view = new SiteItemView({
        model: site
      });
      return view.append(site);
    };

    SitesController.prototype.bindSiteDelete = function(site) {
      return alert("You've deleted " + site.name + "!");
    };

    SitesController.prototype.bindSiteError = function(site) {
      return alert("Site Error spotted, " + site + "!");
    };

    SitesController.prototype.viewProfile = function(params) {
      return console.log("View the profile of the site: " + params.id);
    };

    return SitesController;

  })(Monocle.Controller);

  Site = (function(_super) {
    __extends(Site, _super);

    function Site() {
      _ref = Site.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    Site.fields("name", "description", "city", "address", "picture", "style", "users", "events", "owner");

    Site.prototype.initialize = function() {};

    Site.prototype.validate = function() {
      if (!this.name) {
        return "name is required";
      }
    };

    Site.love = function(user) {
      this.users.push(user);
      user.addSite(this);
      return this;
    };

    return Site;

  })(Monocle.Model);

  SiteItemView = (function(_super) {
    __extends(SiteItemView, _super);

    function SiteItemView() {
      _ref1 = SiteItemView.__super__.constructor.apply(this, arguments);
      return _ref1;
    }

    SiteItemView.prototype.container = "#milista";

    SiteItemView.prototype.template = "<li>\n    <strong>{{name}}</strong>\n    <small>{{style}}</small>\n</li>";

    SiteItemView.prototype.elements = {
      "strong": "name"
    };

    SiteItemView.prototype.events = {
      "click li": "onClick"
    };

    SiteItemView.prototype.onClick = function(event) {
      return console.error("Current Item", this.model);
    };

    SiteItemView.prototype.exampleMethod = function() {
      return this.name.html("new content");
    };

    return SiteItemView;

  })(Monocle.View);

  disco = {
    name: "Kapital",
    description: "Makelele me toca el telele, je",
    city: "Madrid",
    address: "Calle de Atocha, 80",
    picture: "assets/images/logos/kapital.png",
    style: "Pachangueo",
    users: [],
    events: [],
    owner: "Grupo Kapital"
  };

  Lungo.ready(function() {
    var siteCont;
    siteCont = new SitesController("section#sites");
    Site.create({
      name: "Kapital 1",
      description: "1"
    });
    Site.create({
      name: "Kapital 2",
      description: "2"
    });
    Site.create({
      name: "Kapital 3",
      description: "3"
    });
    return Site.create({
      name: "Kapital 4",
      description: "4"
    });
  });

}).call(this);
